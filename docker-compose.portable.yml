# PORTABLE HOME MEDIA AUTOMATION STACK
# Version: 3.0 - Simplified Networking for Universal Compatibility
#
# Key Design Principles:
# ✅ NO custom networks - uses Docker's default bridge
# ✅ NO hardcoded subnets - lets Docker auto-assign
# ✅ Cross-platform compatible (Linux/macOS/Windows Docker Desktop)
# ✅ Extension-friendly (no conflicts with Docker Desktop add-ons)
# ✅ Agent-friendly CLI commands work reliably
#
# Network Architecture:
# - All services on default bridge network (docker0)
# - Inter-service communication via container names
# - Host network access via published ports
# - No subnet conflicts, no IP management needed
#
# Services: 19 total
# DOWNLOADERS:  SABnzbd (8080), Transmission (9092)
# AUTOMATION:   Sonarr (8989), Radarr (7878), Bazarr (6767), Prowlarr (9696)
# SPECIALIZED:  Whisparr (6969), Readarr (8787), Mylar3 (8090), YACReader (8082), Stash (9999)
# MEDIA:        Jellyfin (8096)
# REQUESTS:     Overseerr (5055)
# TRANSCODING:  Tdarr (8265)
# OPTIMIZATION: Recyclarr (TRaSH Guide automation)
# SHARING:      Samba (139,445), NFS (2049)
# MONITORING:   Netdata (19999), Portainer (9000)
# DOCUMENTATION: VitePress Docs (4173)

# NO NETWORKS SECTION - uses default bridge
# NO HARDCODED IPs - Docker auto-assigns
# NO SUBNET CONFLICTS - universal compatibility

# Define volumes for configuration persistence
volumes:
  sabnzbd_config:
    driver: local
    driver_opts:
      type: bind
      o: bind
      device: /home/joe/usenet/config/sabnzbd
  
  transmission_config:
    driver: local
    driver_opts:
      type: bind
      o: bind
      device: /home/joe/usenet/config/transmission
  
  sonarr_config:
    driver: local
    driver_opts:
      type: bind
      o: bind
      device: /home/joe/usenet/config/sonarr
      
  radarr_config:
    driver: local
    driver_opts:
      type: bind
      o: bind
      device: /home/joe/usenet/config/radarr
      
  bazarr_config:
    driver: local
    driver_opts:
      type: bind
      o: bind
      device: /home/joe/usenet/config/bazarr
      
  prowlarr_config:
    driver: local
    driver_opts:
      type: bind
      o: bind
      device: /home/joe/usenet/config/prowlarr
  
  downloads_volume:
    driver: local
    driver_opts:
      type: bind
      o: bind
      device: /home/joe/usenet/downloads
      
  portainer_data:
    driver: local

services:
  # ================================
  # SABnzbd - Usenet Downloader
  # Access at http://localhost:8080
  # ================================
  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    hostname: sabnzbd
    # NO networks: section - uses default bridge
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - sabnzbd_config:/config
      - downloads_volume:/downloads
    ports:
      - "8080:8080"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ================================
  # Transmission - BitTorrent Client
  # Access at http://localhost:9092
  # ================================
  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    hostname: transmission
    # NO networks: section - uses default bridge
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - TRANSMISSION_WEB_HOME=/transmission-web-control/
    volumes:
      - transmission_config:/config
      - downloads_volume:/downloads
      - /home/joe/usenet/downloads/watch:/watch
    ports:
      - "9092:9091"
      - "51413:51413"
      - "51413:51413/udp"
    restart: unless-stopped

  # ================================
  # Sonarr - TV Show Management
  # Access at http://localhost:8989
  # ================================
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    hostname: sonarr
    # NO networks: section - uses default bridge
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - sonarr_config:/config
      - downloads_volume:/downloads
      # JBOD storage mounts
      - /media/joe/Fast_8TB_1:/tv/fast1:rw
      - /media/joe/Fast_8TB_2:/tv/fast2:rw
      - /media/joe/Fast_8TB_3:/tv/fast3:rw
      - /media/joe/Slow_2TB_1:/tv/slow1:rw
      - /media/joe/Slow_2TB_2:/tv/slow2:rw
    ports:
      - "8989:8989"
    restart: unless-stopped
    depends_on:
      - sabnzbd
      - transmission

  # ================================
  # Radarr - Movie Management  
  # Access at http://localhost:7878
  # ================================
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    hostname: radarr
    # NO networks: section - uses default bridge
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - radarr_config:/config
      - downloads_volume:/downloads
      # JBOD storage mounts
      - /media/joe/Fast_4TB_1:/movies/fast1:rw
      - /media/joe/Fast_4TB_2:/movies/fast2:rw
      - /media/joe/Slow_4TB_1:/movies/slow1:rw
      - /media/joe/Slow_4TB_2:/movies/slow2:rw
    ports:
      - "7878:7878"
    restart: unless-stopped
    depends_on:
      - sabnzbd
      - transmission

  # ================================
  # Prowlarr - Indexer Manager
  # Access at http://localhost:9696
  # ================================
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    hostname: prowlarr
    # NO networks: section - uses default bridge
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - prowlarr_config:/config
    ports:
      - "9696:9696"
    restart: unless-stopped

  # ================================
  # Jellyfin - Media Server
  # Access at http://localhost:8096
  # ================================
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    hostname: jellyfin
    # NO networks: section - uses default bridge
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - JELLYFIN_PublishedServerUrl=http://localhost:8096
    volumes:
      - /home/joe/usenet/config/jellyfin:/config
      - /home/joe/usenet/media:/media
      # JBOD media access
      - /media/joe/Fast_8TB_1:/tv/fast1:ro
      - /media/joe/Fast_8TB_2:/tv/fast2:ro
      - /media/joe/Fast_4TB_1:/movies/fast1:ro
      - /media/joe/Fast_4TB_2:/movies/fast2:ro
    ports:
      - "8096:8096"
    restart: unless-stopped

  # ================================
  # Portainer - Container Management
  # Access at http://localhost:9000
  # ================================
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    # NO networks: section - uses default bridge
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - "9000:9000"
      - "8000:8000"
    restart: unless-stopped

  # ================================
  # Netdata - System Monitoring
  # Access at http://localhost:19999
  # ================================
  netdata:
    image: netdata/netdata:latest
    container_name: netdata
    hostname: netdata-media-server
    # NO networks: section - uses default bridge
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
    environment:
      - DOCKER_HOST=/var/run/docker.sock
    ports:
      - "19999:19999"
    restart: unless-stopped