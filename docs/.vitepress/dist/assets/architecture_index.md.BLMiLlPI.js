import{_ as h,C as a,c as g,o as p,ag as t,G as n,j as i,a as s}from"./chunks/framework.BaeFE6Xe.js";const F=JSON.parse('{"title":"🏗️ System Architecture","description":"","frontmatter":{},"headers":[],"relativePath":"architecture/index.md","filePath":"architecture/index.md","lastUpdated":1748174629000}'),d={name:"architecture/index.md"};function u(m,e,k,y,b,f){const r=a("SystemArchitecture"),o=a("PerformanceMetrics"),l=a("ServiceTopology"),c=a("CLISimulator");return p(),g("div",null,[e[0]||(e[0]=t('<h1 id="🏗️-system-architecture" tabindex="-1">🏗️ System Architecture <a class="header-anchor" href="#🏗️-system-architecture" aria-label="Permalink to &quot;🏗️ System Architecture&quot;">​</a></h1><blockquote><p><strong>A comprehensive view of the hot-swappable JBOD media automation stack with intelligent hardware optimization and professional-grade orchestration.</strong></p></blockquote><p>This architecture showcases a production-ready system designed for <strong>technical excellence</strong>, <strong>operational simplicity</strong>, and <strong>community leadership</strong>.</p><h2 id="🎯-interactive-system-overview" tabindex="-1">🎯 <strong>Interactive System Overview</strong> <a class="header-anchor" href="#🎯-interactive-system-overview" aria-label="Permalink to &quot;🎯 **Interactive System Overview**&quot;">​</a></h2>',4)),n(r),e[1]||(e[1]=i("h2",{id:"⚡-performance-optimization-showcase",tabindex:"-1"},[s("⚡ "),i("strong",null,"Performance Optimization Showcase"),s(),i("a",{class:"header-anchor",href:"#⚡-performance-optimization-showcase","aria-label":'Permalink to "⚡ **Performance Optimization Showcase**"'},"​")],-1)),n(o),e[2]||(e[2]=i("h2",{id:"🌐-service-network-topology",tabindex:"-1"},[s("🌐 "),i("strong",null,"Service Network Topology"),s(),i("a",{class:"header-anchor",href:"#🌐-service-network-topology","aria-label":'Permalink to "🌐 **Service Network Topology**"'},"​")],-1)),n(l),e[3]||(e[3]=i("h2",{id:"💻-live-cli-demonstration",tabindex:"-1"},[s("💻 "),i("strong",null,"Live CLI Demonstration"),s(),i("a",{class:"header-anchor",href:"#💻-live-cli-demonstration","aria-label":'Permalink to "💻 **Live CLI Demonstration**"'},"​")],-1)),n(c),e[4]||(e[4]=t(`<hr><h2 id="🔧-core-architecture-principles" tabindex="-1">🔧 <strong>Core Architecture Principles</strong> <a class="header-anchor" href="#🔧-core-architecture-principles" aria-label="Permalink to &quot;🔧 **Core Architecture Principles**&quot;">​</a></h2><h3 id="🎮-hardware-first-design" tabindex="-1"><strong>🎮 Hardware-First Design</strong> <a class="header-anchor" href="#🎮-hardware-first-design" aria-label="Permalink to &quot;**🎮 Hardware-First Design**&quot;">​</a></h3><p>Our architecture prioritizes <strong>hardware optimization</strong> as a first-class concern:</p><ul><li><strong>GPU Acceleration</strong>: NVIDIA RTX, AMD VAAPI, Intel QuickSync, Raspberry Pi VideoCore</li><li><strong>Automatic Driver Installation</strong>: One-command setup with hardware-specific optimizations</li><li><strong>Performance Profiles</strong>: Dedicated (100%), High Performance (75%), Balanced (50%), Light (25%), Development (10%)</li><li><strong>Real Performance Gains</strong>: 4K HEVC transcoding 2-5 FPS → 60+ FPS, 200W CPU → 50W GPU</li></ul><h3 id="🗄️-universal-storage-philosophy" tabindex="-1"><strong>🗄️ Universal Storage Philosophy</strong> <a class="header-anchor" href="#🗄️-universal-storage-philosophy" aria-label="Permalink to &quot;**🗄️ Universal Storage Philosophy**&quot;">​</a></h3><p><strong>Hot-swappable JBOD excellence</strong> that works with any storage configuration:</p><ul><li><strong>Comprehensive Drive Discovery</strong>: ZFS, Btrfs, cloud mounts (Dropbox, OneDrive, Google Drive), JBOD arrays</li><li><strong>Interactive Drive Selection</strong>: Professional TUI for selecting drives to expose to all services</li><li><strong>Universal Service Access</strong>: Selected storage automatically accessible to ALL services (Sonarr, Radarr, Jellyfin, Tdarr, etc.)</li><li><strong>Dynamic Mount Generation</strong>: Auto-generates docker-compose.storage.yml with proper mount configurations</li><li><strong>Hot-Swap Support</strong>: JBOD arrays with automated drive management</li></ul><h3 id="🐳-container-orchestration-excellence" tabindex="-1"><strong>🐳 Container Orchestration Excellence</strong> <a class="header-anchor" href="#🐳-container-orchestration-excellence" aria-label="Permalink to &quot;**🐳 Container Orchestration Excellence**&quot;">​</a></h3><p><strong>19 integrated services</strong> working in perfect harmony:</p><h4 id="📺-media-automation-6-services" tabindex="-1"><strong>📺 Media Automation (6 Services)</strong> <a class="header-anchor" href="#📺-media-automation-6-services" aria-label="Permalink to &quot;**📺 Media Automation (6 Services)**&quot;">​</a></h4><ul><li><strong>Sonarr</strong> (8989) - TV show automation with TRaSH Guide optimization</li><li><strong>Radarr</strong> (7878) - Movie automation with custom quality profiles</li><li><strong>Readarr</strong> (8787) - Book/audiobook automation</li><li><strong>Bazarr</strong> (6767) - Subtitle automation for 40+ languages</li><li><strong>Prowlarr</strong> (9696) - Universal indexer management</li><li><strong>Recyclarr</strong> - Automatic TRaSH Guide optimization</li></ul><h4 id="🎬-media-services-4-services" tabindex="-1"><strong>🎬 Media Services (4 Services)</strong> <a class="header-anchor" href="#🎬-media-services-4-services" aria-label="Permalink to &quot;**🎬 Media Services (4 Services)**&quot;">​</a></h4><ul><li><strong>Jellyfin</strong> (8096) - Open-source media server with hardware transcoding</li><li><strong>Overseerr</strong> (5055) - Beautiful request management interface</li><li><strong>YACReader</strong> (8082) - Comic/manga server and reader</li><li><strong>Tdarr</strong> (8265) - Automated transcoding with GPU acceleration</li></ul><h4 id="⬇️-download-processing-2-services" tabindex="-1"><strong>⬇️ Download &amp; Processing (2 Services)</strong> <a class="header-anchor" href="#⬇️-download-processing-2-services" aria-label="Permalink to &quot;**⬇️ Download &amp; Processing (2 Services)**&quot;">​</a></h4><ul><li><strong>SABnzbd</strong> (8080) - High-speed Usenet downloader</li><li><strong>Transmission</strong> (9092) - BitTorrent client</li></ul><h4 id="🌐-network-sharing-3-services" tabindex="-1"><strong>🌐 Network &amp; Sharing (3 Services)</strong> <a class="header-anchor" href="#🌐-network-sharing-3-services" aria-label="Permalink to &quot;**🌐 Network &amp; Sharing (3 Services)**&quot;">​</a></h4><ul><li><strong>Samba</strong> (445) - Windows file sharing</li><li><strong>NFS</strong> (2049) - Unix/Linux file sharing</li><li><strong>Cloudflare Tunnel</strong> - Secure remote access</li></ul><h4 id="📊-monitoring-management-2-services" tabindex="-1"><strong>📊 Monitoring &amp; Management (2 Services)</strong> <a class="header-anchor" href="#📊-monitoring-management-2-services" aria-label="Permalink to &quot;**📊 Monitoring &amp; Management (2 Services)**&quot;">​</a></h4><ul><li><strong>Netdata</strong> (19999) - Real-time system monitoring</li><li><strong>Portainer</strong> (9000) - Docker container management</li></ul><h4 id="🔍-indexing-adult-content-2-services" tabindex="-1"><strong>🔍 Indexing &amp; Adult Content (2 Services)</strong> <a class="header-anchor" href="#🔍-indexing-adult-content-2-services" aria-label="Permalink to &quot;**🔍 Indexing &amp; Adult Content (2 Services)**&quot;">​</a></h4><ul><li><strong>Jackett</strong> (9117) - Torrent tracker proxy</li><li><strong>Whisparr</strong> (6969) - Adult content automation</li><li><strong>Mylar3</strong> (8090) - Comic book automation</li></ul><h3 id="🌐-network-security-architecture" tabindex="-1"><strong>🌐 Network &amp; Security Architecture</strong> <a class="header-anchor" href="#🌐-network-security-architecture" aria-label="Permalink to &quot;**🌐 Network &amp; Security Architecture**&quot;">​</a></h3><p><strong>Zero exposed ports</strong> with enterprise-grade security:</p><ul><li><strong>Domain</strong>: beppesarrstack.net configured ✅</li><li><strong>Cloudflare</strong>: API token integrated, DNS records created ✅</li><li><strong>Tunnel Config</strong>: Generated for all services ✅</li><li><strong>Zero Exposed Ports</strong>: Cloudflare Tunnel architecture ✅</li><li><strong>SSL/TLS</strong>: Automatic via Cloudflare ✅</li></ul><hr><h2 id="🚀-professional-cli-design" tabindex="-1">🚀 <strong>Professional CLI Design</strong> <a class="header-anchor" href="#🚀-professional-cli-design" aria-label="Permalink to &quot;🚀 **Professional CLI Design**&quot;">​</a></h2><h3 id="modern-command-architecture" tabindex="-1"><strong>Modern Command Architecture</strong> <a class="header-anchor" href="#modern-command-architecture" aria-label="Permalink to &quot;**Modern Command Architecture**&quot;">​</a></h3><p>Following <strong>pyenv-style patterns</strong> for intuitive professional use:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Component-Based Commands (Modern)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usenet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> storage</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                 # List ALL mounted drives (ZFS, cloud, JBOD)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usenet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> storage</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/drive1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # Add specific drive to pool</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usenet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> storage</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sync</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                 # Apply changes and restart services</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usenet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hardware</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">               # Show GPU capabilities and optimization opportunities</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usenet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hardware</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> optimize</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --auto</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Generate hardware-tuned configurations</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usenet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hardware</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install-drivers</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Auto-install GPU drivers (NVIDIA/AMD/Intel/RPi)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usenet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> services</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">               # Show all service health (was: status)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usenet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> services</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sonarr</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # View specific logs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usenet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> services</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> radarr</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # Restart service</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usenet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> backup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">               # Create compressed configuration backup</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usenet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> backup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restore</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> backup.tar</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # Restore from backup with verification</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Primary Workflow</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usenet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deploy</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                      # Interactive full deployment</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usenet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deploy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --auto</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">               # Auto-detect everything and deploy</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="intelligent-defaults-safety" tabindex="-1"><strong>Intelligent Defaults &amp; Safety</strong> <a class="header-anchor" href="#intelligent-defaults-safety" aria-label="Permalink to &quot;**Intelligent Defaults &amp; Safety**&quot;">​</a></h3><ul><li><strong>Safe defaults prevent user footguns</strong> (config-only backups)</li><li><strong>Rich metadata system</strong> provides excellent UX</li><li><strong>Comprehensive validation</strong> with helpful error messages</li><li><strong>Professional help system</strong> at every level</li></ul><hr><h2 id="🎯-quality-engineering-standards" tabindex="-1">🎯 <strong>Quality Engineering Standards</strong> <a class="header-anchor" href="#🎯-quality-engineering-standards" aria-label="Permalink to &quot;🎯 **Quality Engineering Standards**&quot;">​</a></h2><h3 id="following-stan-eisenstat-s-principles" tabindex="-1"><strong>Following Stan Eisenstat&#39;s Principles</strong> <a class="header-anchor" href="#following-stan-eisenstat-s-principles" aria-label="Permalink to &quot;**Following Stan Eisenstat&#39;s Principles**&quot;">​</a></h3><blockquote><p><em>&quot;Programs must be written for people to read, and only incidentally for machines to execute.&quot;</em></p></blockquote><h4 id="code-quality-metrics" tabindex="-1"><strong>Code Quality Metrics</strong> <a class="header-anchor" href="#code-quality-metrics" aria-label="Permalink to &quot;**Code Quality Metrics**&quot;">​</a></h4><ul><li><strong>80-character lines</strong> for professional terminal compatibility</li><li><strong>Function contracts</strong> documenting purpose, arguments, and returns</li><li><strong>Comprehensive error handling</strong> with helpful guidance</li><li><strong>Clear naming</strong> that explains intent</li><li><strong>Zero magic strings</strong> - environment-based configuration throughout</li></ul><h4 id="professional-standards" tabindex="-1"><strong>Professional Standards</strong> <a class="header-anchor" href="#professional-standards" aria-label="Permalink to &quot;**Professional Standards**&quot;">​</a></h4><ul><li><strong>Single responsibility</strong> - each component has one clear job</li><li><strong>Proper abstractions</strong> - configuration, storage, hardware management</li><li><strong>Professional CLI design</strong> - follows industry standards (Git, Docker, Terraform)</li><li><strong>Comprehensive testing</strong> - unit and integration coverage</li></ul><hr><h2 id="📊-real-world-performance-data" tabindex="-1">📊 <strong>Real-World Performance Data</strong> <a class="header-anchor" href="#📊-real-world-performance-data" aria-label="Permalink to &quot;📊 **Real-World Performance Data**&quot;">​</a></h2><h3 id="hardware-optimization-results" tabindex="-1"><strong>Hardware Optimization Results</strong> <a class="header-anchor" href="#hardware-optimization-results" aria-label="Permalink to &quot;**Hardware Optimization Results**&quot;">​</a></h3><ul><li><strong>4K HEVC Transcoding</strong>: 2-5 FPS (CPU) → 60+ FPS (GPU) = <strong>1200% improvement</strong></li><li><strong>Power Consumption</strong>: 200W (CPU) → 50W (GPU) = <strong>75% reduction</strong></li><li><strong>Concurrent Streams</strong>: 2 streams → 8+ streams = <strong>4x capacity</strong></li><li><strong>Quality Enhancement</strong>: Standard → HDR10+ with tone mapping</li></ul><h3 id="storage-management-capabilities" tabindex="-1"><strong>Storage Management Capabilities</strong> <a class="header-anchor" href="#storage-management-capabilities" aria-label="Permalink to &quot;**Storage Management Capabilities**&quot;">​</a></h3><ul><li><strong>29 drives detected</strong> including 8TB NVMe (<code>/media/joe/Fast_8TB_31</code>)</li><li><strong>Multiple filesystem support</strong>: ZFS, exFAT, cloud mounts, JBOD</li><li><strong>Hot-swap ready</strong>: Plug drive → API update → no service restart</li><li><strong>Cross-platform compatibility</strong>: exFAT drives for camping trips</li></ul><h3 id="service-reliability" tabindex="-1"><strong>Service Reliability</strong> <a class="header-anchor" href="#service-reliability" aria-label="Permalink to &quot;**Service Reliability**&quot;">​</a></h3><ul><li><strong>19 services running</strong> with 100% uptime</li><li><strong>Automatic API synchronization</strong> across all media management services</li><li><strong>TRaSH Guide integration</strong> for optimal quality profiles</li><li><strong>Zero-configuration networking</strong> via Cloudflare Tunnel</li></ul><hr><h2 id="🎓-technical-leadership-demonstration" tabindex="-1">🎓 <strong>Technical Leadership Demonstration</strong> <a class="header-anchor" href="#🎓-technical-leadership-demonstration" aria-label="Permalink to &quot;🎓 **Technical Leadership Demonstration**&quot;">​</a></h2><h3 id="product-excellence-indicators" tabindex="-1"><strong>Product Excellence Indicators</strong> <a class="header-anchor" href="#product-excellence-indicators" aria-label="Permalink to &quot;**Product Excellence Indicators**&quot;">​</a></h3><ul><li><strong>Technical Depth</strong>: Vue 3, D3.js, advanced visualizations, Docker orchestration</li><li><strong>Product Sense</strong>: User-centered design, community integration, workflow optimization</li><li><strong>Leadership Evidence</strong>: Resource sharing, expert guidance provision, community building</li><li><strong>Communication Skills</strong>: Clear documentation, helpful interactions, technical writing</li></ul><h3 id="community-impact" tabindex="-1"><strong>Community Impact</strong> <a class="header-anchor" href="#community-impact" aria-label="Permalink to &quot;**Community Impact**&quot;">​</a></h3><ul><li><strong>Comprehensive Resource Hub</strong>: Anna&#39;s Archive, Internet Archive, FMD2, EmuDeck integration</li><li><strong>Expert Support System</strong>: Pre-populated contact forms for technical assistance</li><li><strong>Knowledge Sharing</strong>: Deep research with validated links to major platforms</li><li><strong>Professional Presentation</strong>: Industry-standard documentation and architecture</li></ul><hr><p><em>This architecture represents the intersection of <strong>technical excellence</strong>, <strong>product intuition</strong>, and <strong>community leadership</strong> - built with Bell Labs standards and dedicated to the principles of clear, maintainable, and genuinely useful software.</em></p>`,56))])}const C=h(d,[["render",u]]);export{F as __pageData,C as default};
