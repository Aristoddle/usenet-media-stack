import{_ as s,c as e,o as i,ag as n}from"./chunks/framework.BJipvzRy.js";const g=JSON.parse('{"title":"Storage Management","description":"","frontmatter":{},"headers":[],"relativePath":"storage/index.md","filePath":"storage/index.md","lastUpdated":1748168333000}'),t={name:"storage/index.md"};function r(l,a,o,p,h,d){return i(),e("div",null,a[0]||(a[0]=[n(`<h1 id="storage-management" tabindex="-1">Storage Management <a class="header-anchor" href="#storage-management" aria-label="Permalink to &quot;Storage Management&quot;">​</a></h1><p>Hot-swappable JBOD architecture with universal drive support.</p><h2 id="supported-storage" tabindex="-1">Supported Storage <a class="header-anchor" href="#supported-storage" aria-label="Permalink to &quot;Supported Storage&quot;">​</a></h2><ul><li><strong>ZFS/Btrfs</strong>: Native filesystem support</li><li><strong>Cloud Storage</strong>: Dropbox, OneDrive, Google Drive</li><li><strong>Network Storage</strong>: NFS, Samba shares</li><li><strong>External Drives</strong>: USB, eSATA, Thunderbolt</li></ul><h2 id="quick-start" tabindex="-1">Quick Start <a class="header-anchor" href="#quick-start" aria-label="Permalink to &quot;Quick Start&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Discover all available drives</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./usenet</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --storage</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> discover</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Interactive drive selection</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./usenet</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --storage</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> select</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Apply storage configuration</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./usenet</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --storage</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="hot-swap-workflow" tabindex="-1">Hot-Swap Workflow <a class="header-anchor" href="#hot-swap-workflow" aria-label="Permalink to &quot;Hot-Swap Workflow&quot;">​</a></h2><ol><li>Plug in new drive</li><li>Run <code>./usenet --storage discover</code></li><li>Select drive in TUI</li><li>All services gain instant access</li></ol>`,8)]))}const k=s(t,[["render",r]]);export{g as __pageData,k as default};
